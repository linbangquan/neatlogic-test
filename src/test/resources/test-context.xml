<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="false" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:hdp="http://www.springframework.org/schema/hadoop" xmlns:nacos="http://nacos.io/schema/nacos" xsi:schemaLocation="http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://nacos.io/schema/nacos
		http://nacos.io/schema/nacos.xsd">

	<bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"> 
	<property name="location"> 
		<value>classpath:test.properties</value> 
	</property> 
	</bean>
	<!-- com.alibaba.druid.pool.DruidDataSource有链接溢出问题 -->
	<!-- org.apache.commons.dbcp2.BasicDataSource -->
	<bean id="dataSourceMaster" class="codedriver.framework.common.CodeDriverBasicDataSource">
		<property name="driverClassName">
			<value>${db.driverClassName}</value>
		</property>
		<property name="url">
			<value>${db.url}</value>
		</property>
		<property name="username">
			<value>${db.username}</value>
		</property>
		<property name="password">
			<value>${db.password}</value>
		</property>
		<property name="validationQuery">
			<value>${conn.validationQuery}</value>
		</property>
		<property name="testOnBorrow">
			<value>${conn.testOnBorrow}</value>
		</property>
		<property name="maxIdle">
			<value>${conn.maxIdle}</value>
		</property>
		<property name="initialSize">
			<value>${conn.initialSize}</value>
		</property>
	</bean>

	<bean id="dataSource" class="codedriver.framework.common.CodeDriverRoutingDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="master" value-ref="dataSourceMaster" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSourceMaster" />
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="codedriver.framework.**.mapper" />
	</bean>
	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:codedriver/framework/dao/config/mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath*:codedriver/framework/**/mapper/*.xml</value>
			</list>
		</property>
	</bean>

	<aop:aspectj-autoproxy expose-proxy="true" proxy-target-class="false" />

	<bean id="DatasourceInitializer" class="codedriver.framework.startup.DatasourceInitializer"></bean>

</beans>